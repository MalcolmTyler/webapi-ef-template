// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using test_webapi.Data;

#nullable disable

namespace test_webapi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250309172722_SeedCustomers")]
    partial class SeedCustomers
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("test_webapi.Entities.CustomerEntity", b =>
                {
                    b.Property<int>("CustID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustID"));

                    b.Property<string>("CompanyName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactFirstNames")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactSurname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactTitle")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Fax")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Line1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Line2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Line3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Line4")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("Mailshot")
                        .HasColumnType("bit");

                    b.Property<string>("Postcode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telephone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CustID");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustID = 1,
                            CompanyName = "Company A",
                            ContactFirstNames = "John",
                            ContactSurname = "Doe",
                            ContactTitle = "Mr.",
                            Email = "john.doe@companya.com",
                            Fax = "123-456-7891",
                            Line1 = "123 Main St",
                            Line2 = "",
                            Line3 = "",
                            Line4 = "",
                            Mailshot = true,
                            Postcode = "12345",
                            Telephone = "123-456-7890"
                        },
                        new
                        {
                            CustID = 2,
                            CompanyName = "Company B",
                            ContactFirstNames = "Jane",
                            ContactSurname = "Smith",
                            ContactTitle = "Ms.",
                            Email = "jane.smith@companyb.com",
                            Fax = "987-654-3211",
                            Line1 = "456 Elm St",
                            Line2 = "",
                            Line3 = "",
                            Line4 = "",
                            Mailshot = false,
                            Postcode = "67890",
                            Telephone = "987-654-3210"
                        },
                        new
                        {
                            CustID = 3,
                            CompanyName = "Company C",
                            ContactFirstNames = "Alice",
                            ContactSurname = "Johnson",
                            ContactTitle = "Dr.",
                            Email = "alice.johnson@companyc.com",
                            Fax = "555-555-5556",
                            Line1 = "789 Oak St",
                            Line2 = "",
                            Line3 = "",
                            Line4 = "",
                            Mailshot = true,
                            Postcode = "54321",
                            Telephone = "555-555-5555"
                        });
                });

            modelBuilder.Entity("test_webapi.Entities.Summary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Summaries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Freezing"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Bracing"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Chilly"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Cool"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Mild"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Warm"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Balmy"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Hot"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Sweltering"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Scorching"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
